---
title: "DATA VISUALIZATION"
df-print: kable
execute: 
  echo: true
  warning: false
  message: false
code-overflow: wrap  
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(jsonlite)
library(httr2)
library(dotenv)
load_dot_env()
theme_set(theme_bw())
```

```{r}
# API base URL
base_url <- "https://quickstats.nass.usda.gov/api/api_GET"
api_key <- Sys.getenv("QUICKSTATS_API")


```

```{r}
params <- list(
  key = api_key,
  commodity_desc = "BEANS",
  statisticcat_desc = "PRODUCTION", 
  agg_level_desc = "NATIONAL"       
)
```

```{r}
response <- request(base_url) %>% 
  req_url_query(!!!params) %>%   
  req_perform()
```

```{r}
data <- resp_body_json(response,simplifyVector = TRUE)

```

```{r}

beans <- tibble(year = data$data$year,
                production = data$data$Value) %>%
  arrange(desc(year)) 




```

```{r}
str(beans)

beans_totprod <- beans %>% 
  mutate(production =as.numeric(str_remove_all(production, ",")), 
          production =  if_else(is.na(production),0,production)) %>% 
  group_by(year) %>% 
  summarise(total_production = sum(production))
            
  write.csv(beans_totprod,"usa_beans.csv",row.names = FALSE)          

```

```{r}
beans_totprod %>% 
  ggplot(aes(x = year, y= total_production))+
  geom_point(color = "navyblue")+
  geom_line(color = "steelblue",linewidth = 1)+
  labs(x = "Year",
       y = "Production (metric tons)",
      title = "Total Production of Beans in the USA Over Time")+
  theme(plot.title = element_text(hjust = 0.5,face = "bold",size = 16))
  
```

```{r}
## calculate rate of growth of beans production


beans_totprod <- beans_totprod %>%
  arrange(year) %>% 
  mutate(
    growth = (total_production - lag(total_production)) / lag(total_production) * 100 
  )



beans_totprod %>%
  ggplot(aes(x = year, y = growth)) +
  geom_line(color = "steelblue",linewidth= 1) +
  geom_point(color = "red") +
  labs(
    title = "Yearly Growth in Beans Production",
    x = "Year",
    y = "Growth (%)"
  ) +
  theme(plot.title = element_text(hjust = 0.5,face = "bold",size = 16))
```
